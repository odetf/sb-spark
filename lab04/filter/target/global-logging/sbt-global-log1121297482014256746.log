[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Olga\AppData\Local\Temp\idea90238.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Olga\AppData\Local\Temp\idea90238.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Oracle Corporation Java 17.0.5)
[debug]       Load.loadUnit: plugins took 99.199ms
[debug]       Load.loadUnit: defsScala took 0.2277ms
[debug] [Loading] Scanning directory C:\Users\Olga\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Olga\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.8852 ms
[debug]           Load.resolveProject(global-plugins) took 38.188ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Olga\.sbt\1.0\plugins, plugins: List(<none>))) took 76.5817ms
[debug] [Loading] Done in C:\Users\Olga\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 93.5647ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2447ms
[debug]     Load.loadUnit(file:/C:/Users/Olga/.sbt/1.0/plugins/, ...) took 201.3161ms
[debug]   Load.apply: load took 358.8994ms
[debug]   Load.apply: resolveProjects took 5.1102ms
[debug]   Load.apply: finalTransforms took 56.2302ms
[debug]   Load.apply: config.delegates took 8.2292ms
[debug]   Load.apply: Def.make(settings)... took 573.5721ms
[debug]   Load.apply: structureIndex took 129.5725ms
[debug]   Load.apply: mkStreams took 1.5583ms
[info] loading global plugins from C:\Users\Olga\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2916.3802ms
[debug]           Load.loadUnit: plugins took 23.8187ms
[debug]           Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04\project
[debug]             Load.loadUnit: mkEval took 5.833ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3701 ms
[info] loading settings for project lab04-build from idea90238.sbt ...
[debug]               Load.resolveProject(lab04-build) took 3.4252ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab04-build, base: C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04\project, plugins: List(<none>))) took 6.4272ms
[debug] [Loading] Done in C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04\project, returning: (lab04-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 122.5816ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3552ms
[debug]         Load.loadUnit(file:/C:/Users/Olga/.ssh/sb-spark/sb-spark/lab04/project/, ...) took 153.8817ms
[debug]       Load.apply: load took 156.2564ms
[debug]       Load.apply: resolveProjects took 0.148ms
[debug]       Load.apply: finalTransforms took 13.5988ms
[debug]       Load.apply: config.delegates took 0.458ms
[debug]       Load.apply: Def.make(settings)... took 115.8036ms
[debug]       Load.apply: structureIndex took 40.7527ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1911.6949ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04
[debug]       Load.loadUnit: mkEval took 0.2951ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.8137 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 38.7244ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04, plugins: List(<none>))) took 43.2186ms
[debug] [Loading] Done in C:\Users\Olga\.ssh\sb-spark\sb-spark\lab04, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3735.2358ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.4426ms
[debug]   Load.loadUnit(file:/C:/Users/Olga/.ssh/sb-spark/sb-spark/lab04/, ...) took 5671.4906ms
[debug] Load.apply: load took 5673.2235ms
[debug] Load.apply: resolveProjects took 0.1646ms
[debug] Load.apply: finalTransforms took 27.7662ms
[debug] Load.apply: config.delegates took 0.3288ms
[debug] Load.apply: Def.make(settings)... took 105.8416ms
[debug] Load.apply: structureIndex took 47.1246ms
[debug] Load.apply: mkStreams took 0.7219ms
[info] set current project to lab04 (in build file:/C:/Users/Olga/.ssh/sb-spark/sb-spark/lab04/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63109 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63109, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lab04 (in build file:/C:/Users/Olga/.ssh/sb-spark/sb-spark/lab04/)
[debug] > Exec(idea-shell, None, None)
